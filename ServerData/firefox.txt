
-------------------------GET : REQUEST-------------------------
Start line: GET / HTTP/1.1

Headers:    Host: localhost
            User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10.15; rv:109.0) Gecko/20100101 Firefox/114.0
            Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
            Accept-Language: en-GB,en;q=0.5
            Accept-Encoding: gzip, deflate, br
            Connection: keep-alive
            Upgrade-Insecure-Requests: 1
            Sec-Fetch-Dest: document
            Sec-Fetch-Mode: navigate
            Sec-Fetch-Site: none
            Sec-Fetch-User: ?1


-------------------------POST : REQUEST-------------------------
Start line: POST /submit_endpoint HTTP/1.1

Headers:    Host: localhost
            User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10.15; rv:109.0) Gecko/20100101 Firefox/114.0
            Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
            Accept-Language: en-GB,en;q=0.5
            Accept-Encoding: gzip, deflate, br
            Content-Type: application/x-www-form-urlencoded
            Content-Length: 191
            Origin: http://localhost
            Connection: keep-alive
            Referer: http://localhost/
            Upgrade-Insecure-Requests: 1
            Sec-Fetch-Dest: document
            Sec-Fetch-Mode: navigate
            Sec-Fetch-Site: same-origin
            Sec-Fetch-User: ?1

Body:       name=dsg&email=hsjhd%40hgs.js&message=sACDS&pdfUpload=HTTP_Server__Everything_you_need_to_know_to_Build_a_simple_HTTP_server_from_scratch___by_Skrew_Everything___From_The_Scratch___Medium.pdf

-------------------------DELETE : REQUEST-------------------------
Start line: DELETE /delete_endpoint HTTP/1.1

Headers:    Host: localhost
            User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10.15; rv:109.0) Gecko/20100101 Firefox/114.0
            Accept: */*
            Accept-Language: en-GB,en;q=0.5
            Accept-Encoding: gzip, deflate, br
            Referer: http://localhost/  
            Content-Type: application/json
            Content-Length: 8
            Origin: http://localhost
            Connection: keep-alive
            Sec-Fetch-Dest: empty
            Sec-Fetch-Mode: cors
            Sec-Fetch-Site: same-origin

Body:       {"id":1}


void    printServerData(t_server serv)
{
    std::cout << "server " << std::endl;
    std::cout << "	name: " << serv.name << std::endl;
    std::cout << "	host: " << serv.host << std::endl;
    std::cout << "	root: " << serv.root << std::endl;
    std::cout << "	port: ";
    for (size_t j = 0; j < serv.port.size(); j++)
        std::cout << serv.port[j] << " ";
    std::cout << std::endl;
    std::cout << "	index: ";
    for (size_t j = 0; j < serv.index.size(); j++)
        std::cout << serv.index[j] << " ";
    std::cout << std::endl;
	{
		std::cout << "	error_page: ";
		size_t h = 0;
		while (h < serv.error_page.first.size())
			std::cout << serv.error_page.first[h++] << " ";
		std::cout << serv.error_page.second << std::endl;
	}
    std::cout << "	redirect: " << serv.redirect << std::endl;
    std::cout << "	timeout: " << serv.timeout << std::endl;
    std::cout << "	allow_methods: ";
    for (size_t j = 0; j < serv.allow_methods.size(); j++)
        std::cout << serv.allow_methods[j] << " ";
    std::cout << std::endl;
    std::cout << "	location: " << std::endl;
    for (size_t j = 0; j < serv.locations.size(); j++)
    {
        std::cout << "	location " << j << std::endl;
        std::cout << "		path: " << serv.locations[j].path << std::endl;
        std::cout << "		root: " << serv.locations[j].root << std::endl;
        std::cout << "		alias: " << serv.locations[j].alias << std::endl;
        std::cout << "		index: ";
        for (size_t k = 0; k < serv.locations[j].index.size(); k++)
            std::cout << serv.locations[j].index[k] << " ";
        std::cout << std::endl;
        std::cout << "      cgi_index: ";
        for (size_t k = 0; k < serv.locations[j].cgi_index.size(); k++)
            std::cout << serv.locations[j].cgi_index[k] << " ";
        std::cout << std::endl;
    }
    std::cout << std::endl;

}